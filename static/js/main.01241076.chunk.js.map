{"version":3,"sources":["Components/TodoForm.js","Components/Todo.js","Components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","className","placeholder","onChange","name","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","TodoList","setTodos","test","newTodos","console","log","updatedTodos","removedArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMA4DeA,MA1Df,SAAkBC,GAChB,MAA0BC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAAnE,mBAAOC,EAAP,KAAcC,EAAd,KAQMC,EAAe,SAACC,GACpBF,EAASE,EAAEC,OAAOL,QAGdM,EAAe,SAACF,GACpBA,EAAEG,iBAEFV,EAAMW,SAAS,CACbC,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMZ,IAERC,EAAS,KAGX,OACE,sBAAMM,SAAUF,EAAcQ,UAAU,YAAxC,SACGjB,EAAME,KACL,qCACE,uBACEgB,YAAY,mBACZf,MAAOC,EACPe,SAAUb,EACVc,KAAK,OAELH,UAAU,oBAEZ,wBAAQI,QAASZ,EAAcQ,UAAU,mBAAzC,uBAKF,qCACE,uBACEC,YAAY,aACZf,MAAOC,EACPe,SAAUb,EACVc,KAAK,OACLH,UAAU,eAGZ,wBAAQI,QAASZ,EAAcQ,UAAU,cAAzC,4B,eCLKK,EAzCF,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAC/C,EAAwBzB,mBAAS,CAC/BW,GAAI,KACJT,MAAO,KAFT,mBAAOD,EAAP,KAAayB,EAAb,KAcA,OAAIzB,EAAKU,GACA,cAAC,EAAD,CAAUV,KAAMA,EAAMS,SAVV,SAACR,GACpBuB,EAAWxB,EAAKU,GAAIT,GACpBwB,EAAQ,CAENf,GAAI,KACJT,MAAO,QAQJoB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACf,sBACEb,UAAWY,EAAKE,WAAa,oBAAsB,WADrD,UAIE,qBAAmBV,QAAS,kBAAMG,EAAaK,EAAKjB,KAApD,SACGiB,EAAKb,MADEa,EAAKjB,IAGf,sBAAKK,UAAU,QAAf,UACE,cAAC,IAAD,CACEI,QAAS,kBAAMI,EAAWI,EAAKjB,KAC/BK,UAAU,gBAEZ,cAAC,IAAD,CACEI,QAAS,kBAAMM,EAAQ,CAAEf,GAAIiB,EAAKjB,GAAIT,MAAO0B,EAAKb,QAClDC,UAAU,mBAZTa,OCgCIE,MAvDf,WACE,MAA0B/B,mBAAS,IAAnC,mBAAOsB,EAAP,KAAcU,EAAd,KAwCA,OACE,qCACE,4CACA,cAAC,EAAD,CAAUtB,SAzCE,SAACkB,GAAU,IAAD,EAExB,GAAKA,EAAKb,OAAQ,QAAQkB,KAAKL,EAAKb,MAApC,CAIA,IAAMmB,EAAQ,CAAIN,GAAJ,mBAAaN,IAE3BU,EAASE,IACT,EAAAC,SAAQC,IAAR,oBAAed,QAiCb,cAAC,EAAD,CACEA,MAAOA,EACPC,aAhBe,SAACZ,GACpB,IAAI0B,EAAef,EAAMK,KAAI,SAACC,GAI5B,OAHIA,EAAKjB,KAAOA,IACdiB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETI,EAASK,IAULb,WAvBa,SAACb,GAClB,IAAM2B,EAAa,YAAIhB,GAAOiB,QAAO,SAACX,GAAD,OAAUA,EAAKjB,KAAOA,KAE3DqB,EAASM,IAqBLb,WAlCa,SAACe,EAAQC,GACrBA,EAAS1B,OAAQ,QAAQkB,KAAKQ,EAAS1B,OAI5CiB,GAAS,SAACU,GAAD,OACPA,EAAKf,KAAI,SAACgB,GAAD,OAAWA,EAAKhC,KAAO6B,EAASC,EAAWE,eCb3CC,MARf,WACE,OACE,qBAAK5B,UAAU,WAAf,SACE,cAAC,EAAD,OCHN6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.01241076.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\r\n\r\n  // const inputRef = useRef(null);\r\n\r\n  // useEffect(() => {\r\n  //   inputRef.current.focus();\r\n  // });\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input,\r\n    });\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"todo-form\">\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            placeholder=\"Update your item\"\r\n            value={input}\r\n            onChange={handleChange}\r\n            name=\"text\"\r\n            // ref={inputRef}\r\n            className=\"todo-input edit\"\r\n          />\r\n          <button onClick={handleSubmit} className=\"todo-button edit\">\r\n            Update\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            placeholder=\"Add a todo\"\r\n            value={input}\r\n            onChange={handleChange}\r\n            name=\"text\"\r\n            className=\"todo-input\"\r\n            // ref={inputRef}\r\n          />\r\n          <button onClick={handleSubmit} className=\"todo-button\">\r\n            Add todo\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport { RiCloseCircleLine } from \"react-icons/ri\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\n\r\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: \"\",\r\n  });\r\n\r\n  const submitUpdate = (value) => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      \r\n      id: null,\r\n      value: \"\",\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\r\n      key={index}\r\n    >\r\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n        {todo.text}\r\n      </div>\r\n      <div className=\"icons\">\r\n        <RiCloseCircleLine\r\n          onClick={() => removeTodo(todo.id)}\r\n          className=\"delete-icon\"\r\n        />\r\n        <TiEdit\r\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n          className=\"edit-icon\"\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = (todo) => {\r\n    \r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n    console.log(...todos);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos((prev) =>\r\n      prev.map((item) => (item.id === todoId ? newValue : item))\r\n    );\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    const removedArr = [...todos].filter((todo) => todo.id !== id);\r\n\r\n    setTodos(removedArr);\r\n  };\r\n\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 >TO-DO LIST</h1>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport TodoList from './Components/TodoList'\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}