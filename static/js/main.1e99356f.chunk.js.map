{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","onRequestSort","numSelected","rowCount","TableHead","TableRow","headCell","TableCell","align","padding","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","rowData","EnhancedTable","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","rows","setRows","pageNo","setPageNo","useEffect","apiCall","pgNo","pagNo","undefined","fetch","then","response","json","data","item","push","Math","min","length","Paper","TableContainer","Table","size","target","checked","newSelecteds","n","name","TableBody","slice","row","isItemSelected","indexOf","hover","selectedIndex","newSelected","concat","handleClick","role","tabIndex","first_name","last_name","email","avatar","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e99356f.chunk.js","sourcesContent":["import React,{useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  \n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [ \n  { id: 'First_Name', numeric: true, disablePadding: false, label: 'First_Name ' },\n  { id: 'Last_Name', numeric: true, disablePadding: false, label: 'Last_Name ' },\n  { id: 'Email', numeric: true, disablePadding: false, label: 'Email' },\n  { id: 'avatar', numeric: true, disablePadding: false, label: 'avatar ' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nvar rowData = [];\n\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Email');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [rows, setRows] = React.useState([]);\n  const [pageNo, setPageNo] = React.useState([1]);\n\n  useEffect(() => {\n    apiCall();\n  },[])\n\n  const apiCall = (pgNo) => {\n    let pagNo = pageNo;\n    if(pgNo != undefined){\n      pagNo = pgNo\n    }\n    fetch(`https://reqres.in/api/users?page=${pagNo}`)\n    .then(response => response.json())\n    .then(data => {\n      data.data.map(item => {\n          rowData.push(item);\n      });\n      setRows(rowData);\n    });\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n    setPageNo(newPage+1);\n    apiCall(newPage+1);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell align=\"right\">{row.first_name}</TableCell>\n                      <TableCell align=\"right\">{row.last_name}</TableCell>\n                      <TableCell align=\"right\">{row.email}</TableCell>\n                      <TableCell align=\"right\">{row.avatar}</TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}